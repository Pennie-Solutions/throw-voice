cache: &global_cache
  paths:
    - .m2/

variables:
  MAVEN_OPTS: -Dmaven.repo.local=.m2

build:
  artifacts:
    expire_in: 1 hour
    paths:
      - ./target/html
  image: circleci/openjdk:11-jdk
  script:
    - mvn -B de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
    - mvn test
  stage: build

coverage:
  cache: {}
  dependencies:
    - build
  image: circleci/buildpack-deps:curl
  script:
    - bash <(curl -s https://codecov.io/bash) -s ./target -X gcov
  stage: test

package:
  artifacts:
    name: pawa
    expire_in: 30 days
    paths:
      - target/pawa-release
  cache:
    <<: *global_cache
    policy: pull
  dependencies:
    - build
  image: circleci/openjdk:11-jdk
  rules:
    - if: $CI_COMMIT_REF_NAME == 'master'
    - if: $CI_COMMIT_TAG
  script:
    - '[[ -v CI_COMMIT_TAG ]] && VERSION=${CI_COMMIT_TAG#"v"} || VERSION=${CI_COMMIT_SHORT_SHA}'
    - mvn package -B -Dtimestamp=$(date -u +%FT%TZ) -Dversion=${VERSION} -Drevision=$(git rev-parse --short HEAD)
  stage: deploy

container:
  image: docker:19.03.2
  rules:
    - if: $CI_COMMIT_REF_NAME == 'master'
    - if: $CI_COMMIT_TAG
  services:
    - docker:19.03.2-dind
  script:
    - '[ -n "$CI_COMMIT_TAG" ] && VERSION=${CI_COMMIT_TAG#"v"} || VERSION=${BOT_VERSION}-${CI_COMMIT_SHORT_SHA}'
    - BUILD_DATE=$(date -u +%FT%TZ)
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - |
      docker build --quiet \
             --cache-from $CI_REGISTRY/pawabot/pawa:latest \
             -t $CI_REGISTRY/pawabot/pawa:${VERSION} \
             -t $CI_REGISTRY/pawabot/pawa:${VERSION} \
             --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA} \
             --build-arg BUILD_DATE=${BUILD_DATE} \
             --build-arg VERSION=${VERSION} \
             .
    - '[ -n "$CI_COMMIT_TAG" ] && docker push $CI_REGISTRY/pawabot/pawa:latest || docker push $CI_REGISTRY/pawabot/pawa:${VERSION}'
    - docker tag $CI_REGISTRY/pawabot/pawa:${VERSION} gdragon/throw-voice:${VERSION}
    - docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - docker push gdragon/throw-voice:${VERSION}
  stage: deploy
  variables:
    BOT_VERSION: 2.0.0
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: /certs

pages:
  artifacts:
    expire_in: 30 days
    paths:
      - public
  cache: {}
  dependencies:
    - build
  script:
    - mv target/html/ public/
    - mv public/{README,index}.html
  stage: deploy
  rules:
    - if: $CI_COMMIT_REF_NAME == 'master'
    - if: $CI_COMMIT_TAG
